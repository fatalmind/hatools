.TH halockrun 1 "@DATE@" "V@VERSION@" "hatools"
.SH NAME
halockrun \- Run command while holding exclusive lock on file.
.SH SYNOPSIS
.B halockrun 
[\c
.B -ancfv\c
] [\c
.BI -e " exitcode"\c
] [\c
.BI -E " nexitcode"\c
] 
.I lockfile command 
[\c
.I args\c
]\c

.B halockrun -t|-N
[\c
.B -nc\c
] [\c
.BI -e " exitcode"\c
] [\c
.BI -E " nexitcode"\c
]
.I lockfile
.SH DESCRIPTION
Executes 
.I command
with
.I args
while holding an exclusive lock on the file
.IR lockfile .
If the file is locked by another process,
.BR halockrun
.R will wait until the lock becomes available and executes the
.I command
then.

.B halockrun 
is often used to avoid cron job overruns. 

.B halockrun
uses operating system locks (POSIX --
.BR fcntl (2))
that makes it very resistant to stale locks.

.TP 
.B -a
Async mode. 
Starts 
.I command
in the background. 
.B halockrun
itself exits immediately. The exitcode of the executed command is lost.
.TP
.B -c
Create mode. Creates the
.I lockfile
if it doesn't exist. The default behavior is to exit with
.I exitcode
if the specified
.I lockfile
doesn't exist.
.TP
.BI -e " exitcode"
Changes the exitcode returned by
.B halockrun
on fail to
.I exitcode
The default value is 99.

.TP
.BI -E " nexitcode"
Changes the "lock busy" exitcode returned by
.B halockrun

The default value for this option is
.I exitcode
in non-blocking mode and 1 in testing-, and noop-mode.

.TP
.B -n
Non-blocking mode. Exits immediately with
.I nexitcode
if the 
.I lockfile
is locked by another process.
.TP
.B -f
Fork mode. 
The normal behavior of 
.B halockrun 
is to get the lock and call 
.BR execvp (2) 
to execute the command specified. If fork mode, 
.B halockrun 
will do a 
.BR fork (2)
and run the command in its own process. In this case the
.RB parent-- halockrun " itself--holds"
the lock on 
.IR lockfile . 
The split in two processes opens the risk that the parent 
.BR halockrun "--that holds the lock--dies"
and leaves 
.I command 
unprotected.
To minimize this risk, 
.B halockrun
ignores the following signals: TERM, HUP, INT,
PIPE, QUIT, USR1, and USR2.

This option is useful to make sure that the command does not see any
difference when running under protection of 
.BR halockrun .
In other words, the fork mode makes sure that the open file handle to
.I lockfile 
is not visible to 
.IR command .

Fork mode has also influence on the
.I -t
switch, because that will not return the PID of
.I command
but of the parent
.B halockrun
process.

This option is new to version V0.99.08, prior this version 
.B halockrun 
has always 
.BR fork "(2)ed."
The default was changed because reliability 
is more important than transparency--in that case.

If you are in doubt about this option: don't use it.
.TP
.B -t
Test mode.
Checks if  
.I lockfile 
is currently busy, and prints the PID of the process that 
holds the lock--if any.
See also 
.B -N
for that purpose.
The exitcode is 0 if the lock is free or
.I nexitcode
if it is busy. Any other error--such as "lockfile not found"--will result in
.IR exitcode .

Regardless of the lock status,
.B halockrun
will not run any command.

When the
.B -t
flags is specified the flags
.B -a\c
,
.B -n
and
.B -f
are meaningless and will be ignored if they are specified.
.TP
.B -N
No-op mode.
The 
.B -N 
flag is semantically equivalent to:
.nf

   halockrun lockfile /bin/true

.fi
It supplements the 
.B -t
switch because it blocks. It can be combined with the
.B -n
option to change the blocking behavior.
However, it doesn't print the PID of the the lock holder if it is busy.

The 
.B -N
switch is more portable and used to synchronize with a running process. The
.B -t
switch is used to obtain the PID of the running process.

When the
.B -N
flag is specified, the
.B -a 
and
.B -f
flags are meaningless and will be ignored if they are specified.

.TP
.B -v[v]
Verbose mode and more verbose mode--almost debug mode.

.SH "RETURN VALUE"
On success, if 
.I command 
was executed,
.B halockrun
returns the return value of
.IR command .

If 
.B -t
or
.B -N 
was used, 0 is returned if the lock is not currently busy.
.PP
On failure--if 
.I lockfile 
doesn't exist or 
.I command 
.RB "can't be executed--" halockrun
returns the value specified by the
.B \-e
option.
.PP
On failure to obtain the lock in testing mode or in noop mode (
.B -t
or 
.B -N
) the value specified by the 
.B -E
option is returned or
.B 1 
per default.
.PP
On failure to obtain the lock in non-blocking mode
.B halockrun
returns the values specified by the
.B \-E
option.

.SH AUTHOR
Copyright (c) 2001,2003,2005-2010 by Markus Winand <mws@fatalmind.com>
.SH SEE ALSO
.IR hatimerun (1)
